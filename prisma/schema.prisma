generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model SliderImg {
  id        Int      @id @default(autoincrement())
  img       String
  publish   Boolean
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model BannerImg {
  id        Int      @id @default(autoincrement())
  img       String
  publish   Boolean
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Trousers {
  id          Int      @id @default(autoincrement())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  name        String   @db.VarChar(255)
  description String   @db.VarChar(255)
  price       Int
  codePro     String
  size_M      Int
  size_S      Int
  size_L      Int
  size_XL     Int
  material    String
  color       String
  publish     Boolean
  img         String[]
  newPro      Boolean
}

model Shirt {
  id          Int      @id @default(autoincrement())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  name        String   @db.VarChar(255)
  description String   @db.VarChar(255)
  price       Int
  codePro     String
  size_M      Int
  size_S      Int
  size_L      Int
  size_XL     Int
  material    String
  color       String
  publish     Boolean
  img         String[]
  newPro      Boolean
}

model Dress {
  id          Int      @id @default(autoincrement())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  name        String   @db.VarChar(255)
  description String   @db.VarChar(255)
  price       Int
  codePro     String
  size_M      Int
  size_S      Int
  size_L      Int
  size_XL     Int
  material    String
  color       String
  publish     Boolean
  img         String[]
  newPro      Boolean
}

model Skirt {
  id          Int      @id @default(autoincrement())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  name        String   @db.VarChar(255)
  description String   @db.VarChar(255)
  price       Int
  codePro     String
  size_M      Int
  size_S      Int
  size_L      Int
  size_XL     Int
  material    String
  color       String
  publish     Boolean
  img         String[]
  newPro      Boolean
}

model User {
  id          Int     @id @default(autoincrement())
  email       String  @unique
  name        String?
  phoneNumber String
  address     String
  point       Int
  admin       Boolean
  staff       Boolean
  orders      Order[]
}

model Order {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  namePro   String[]
  price     Int
  status    String
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
}
model Voucher {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  disCount Int
  condition Int
}
